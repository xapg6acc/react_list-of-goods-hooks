{"version":3,"sources":["GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["goodsLengths","GoodsList","goodsFromServer","useState","isVisible","setIsVisible","sortGoods","setSortGoodsBy","goodsLength","setGoodsLength","isReversed","setIsReversed","goodsList","useMemo","filter","good","length","sort","first","last","localeCompare","reverse","type","className","onClick","name","id","onChange","event","target","value","map","App","ReactDOM","render","document","getElementById"],"mappings":"sPAGMA,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAMpCC,EAA6B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAC3C,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAoBMC,EAAYC,mBAAQ,WACxB,OAAO,YAAIX,GACRY,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUR,KAC9BS,MAAK,SAACC,EAAOC,GACZ,OAAQb,GACN,IAAK,WACH,OAAOY,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMF,OAASG,EAAKH,OAE7B,QACE,OAAO,QAGd,CAACV,EAAWE,IAMf,OAJIE,GACFE,EAAUS,UAIV,iCACIjB,GACA,wBACEkB,KAAK,SACLC,UAAU,SACVC,QAAS,kBAAMnB,GAAa,IAH9B,wBAQDD,GACC,qCACE,sBAAKmB,UAAU,SAAf,uCAEE,wBACEE,KAAK,OACLC,GAAG,OACHC,SAAU,SAAAC,GAAK,OAAInB,GAAgBmB,EAAMC,OAAOC,QAHlD,SAKG9B,EAAa+B,KAAI,SAAAf,GAAM,OACtB,wBAAQc,MAAOd,EAAf,SAAqCA,GAATA,WAIlC,wBACEM,KAAK,SACLC,UAAU,SACVC,QArDM,WACdb,GAAeD,IAiDT,qBAOA,wBACEY,KAAK,SACLC,UAAU,SACVC,QA1Ea,WACrBjB,EAAe,aAsET,iCAOA,wBACEe,KAAK,SACLC,UAAU,SACVC,QA7EW,WACnBjB,EAAe,WAyET,4BAOA,wBACEe,KAAK,SACLC,UAAU,SACVC,QAhFI,WACZf,EAAe,GACfE,GAAc,GACdJ,EAAe,KA0ET,mBAOA,qBAAIgB,UAAU,OAAd,UACE,gDACCX,EAAUmB,KAAI,SAAAhB,GAAI,OACjB,qBAAeQ,UAAU,aAAzB,UACE,+BAAOR,IACP,iDAAkBA,EAAKC,YAFhBD,gBC1GjBb,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAUa8B,EAPO,kBACpB,sBAAKT,UAAU,MAAf,UACE,uCACA,cAAC,EAAD,CAAWrB,gBAAiBA,QCjBhC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7b949721.chunk.js","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport './GoodsList.scss';\n\nconst goodsLengths = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\ntype Props = {\n  goodsFromServer: string[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goodsFromServer }) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [sortGoods, setSortGoodsBy] = useState('');\n  const [goodsLength, setGoodsLength] = useState(1);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortByAlphabet = () => {\n    setSortGoodsBy('Alphabet');\n  };\n\n  const sortByLength = () => {\n    setSortGoodsBy('Length');\n  };\n\n  const reset = () => {\n    setGoodsLength(1);\n    setIsReversed(false);\n    setSortGoodsBy('');\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const goodsList = useMemo(() => {\n    return [...goodsFromServer]\n      .filter(good => good.length >= goodsLength)\n      .sort((first, last) => {\n        switch (sortGoods) {\n          case 'Alphabet':\n            return first.localeCompare(last);\n\n          case 'Length':\n            return first.length - last.length;\n\n          default:\n            return 0;\n        }\n      });\n  }, [sortGoods, goodsLength]);\n\n  if (isReversed) {\n    goodsList.reverse();\n  }\n\n  return (\n    <div>\n      {!isVisible && (\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setIsVisible(true)}\n        >\n          Show goods\n        </button>\n      )}\n      {isVisible && (\n        <>\n          <div className=\"select\">\n            Choose length for sorting:\n            <select\n              name=\"good\"\n              id=\"good\"\n              onChange={event => setGoodsLength(+event.target.value)}\n            >\n              {goodsLengths.map(length => (\n                <option value={length} key={length}>{length}</option>\n              ))}\n            </select>\n          </div>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={reverse}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={sortByLength}\n          >\n            Sort by length\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n          <ul className=\"list\">\n            <h1>List of goods:</h1>\n            {goodsList.map(good => (\n              <li key={good} className=\"list__item\">\n                <span>{good}</span>\n                <span>{`length: ${good.length}`}</span>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { GoodsList } from './GoodsList/GoodsList';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <h1>Goods</h1>\n    <GoodsList goodsFromServer={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}